{"ast":null,"code":"var _jsxFileName = \"/home/kudos-it/Documents/pro/ar/object_detection/src/App.js\";\n// Import dependencies\nimport React, { useRef, useEffect } from \"react\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport * as cocossd from \"@tensorflow-models/coco-ssd\";\nimport Webcam from \"react-webcam\";\nimport \"./App.css\";\nimport { drawRect } from \"./utilities\";\nconst [width, setWidth] = React.useState(window.innerWidth);\nconst [height, setHeight] = React.useState(window.innerHeight);\n\nfunction App() {\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null); // Main function\n\n  const runCoco = async () => {\n    const net = await cocossd.load();\n    console.log(\"Handpose model loaded.\"); //  Loop and detect hands\n\n    setInterval(() => {\n      detect(net);\n    }, 10);\n  };\n\n  const detect = async net => {\n    // Check data is available\n    if (typeof webcamRef.current !== \"undefined\" && webcamRef.current !== null && webcamRef.current.video.readyState === 4) {\n      // Get Video Properties\n      const video = webcamRef.current.video;\n      const videoWidth = webcamRef.current.video.videoWidth;\n      const videoHeight = webcamRef.current.video.videoHeight; // Set video width\n\n      webcamRef.current.video.width = videoWidth;\n      webcamRef.current.video.height = videoHeight; // Set canvas height and width\n\n      canvasRef.current.width = videoWidth;\n      canvasRef.current.height = videoHeight; // Make Detections\n\n      const obj = await net.detect(video); // Draw mesh\n\n      const ctx = canvasRef.current.getContext(\"2d\");\n      drawRect(obj, ctx);\n    }\n  };\n\n  useEffect(() => runCoco());\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, `Window width = ${width}`), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, `Window height = ${height}`), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, \"Devendra Kumar Singh\"), /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Webcam, {\n    ref: webcamRef,\n    muted: true,\n    style: {\n      position: \"absolute\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n      left: 0,\n      right: 0,\n      textAlign: \"center\",\n      zindex: 9,\n      width: 640,\n      height: 480\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }), console.log(tf), /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: canvasRef,\n    style: {\n      position: \"absolute\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n      left: 0,\n      right: 0,\n      textAlign: \"center\",\n      zindex: 8,\n      width: 640,\n      height: 480\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/kudos-it/Documents/pro/ar/object_detection/src/App.js"],"names":["React","useRef","useEffect","tf","cocossd","Webcam","drawRect","width","setWidth","useState","window","innerWidth","height","setHeight","innerHeight","App","webcamRef","canvasRef","runCoco","net","load","console","log","setInterval","detect","current","video","readyState","videoWidth","videoHeight","obj","ctx","getContext","position","marginLeft","marginRight","left","right","textAlign","zindex"],"mappings":"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","sourcesContent":["// Import dependencies\nimport React, { useRef,  useEffect } from \"react\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport * as cocossd from \"@tensorflow-models/coco-ssd\";\nimport Webcam from \"react-webcam\";\nimport \"./App.css\";\nimport { drawRect } from \"./utilities\";\n\n\n\nconst [width, setWidth] = React.useState(window.innerWidth);\nconst [height, setHeight] = React.useState(window.innerHeight);\n\nfunction App() {\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  // Main function\n  const runCoco = async () => {\n    const net = await cocossd.load();\n    console.log(\"Handpose model loaded.\");\n    //  Loop and detect hands\n    setInterval(() => {\n      detect(net);\n    }, 10);\n  };\n\n  const detect = async (net) => {\n    // Check data is available\n    if (\n      typeof webcamRef.current !== \"undefined\" &&\n      webcamRef.current !== null &&\n      webcamRef.current.video.readyState === 4\n    ) {\n      // Get Video Properties\n      const video = webcamRef.current.video;\n      const videoWidth = webcamRef.current.video.videoWidth;\n      const videoHeight = webcamRef.current.video.videoHeight;\n\n      // Set video width\n      webcamRef.current.video.width = videoWidth;\n      webcamRef.current.video.height = videoHeight;\n\n      // Set canvas height and width\n      canvasRef.current.width = videoWidth;\n      canvasRef.current.height = videoHeight;\n\n      // Make Detections\n      const obj = await net.detect(video);\n\n      // Draw mesh\n      const ctx = canvasRef.current.getContext(\"2d\");\n      drawRect(obj, ctx); \n    }\n  };\n\n  useEffect(()=>runCoco());\n\n  return (\n    <div className=\"App\">\n        <div>{`Window width = ${width}`}</div>\n    <div>{`Window height = ${height}`}</div>\n      <h1>Devendra Kumar Singh</h1>\n      <header className=\"App-header\">\n        <Webcam\n          ref={webcamRef}\n          muted={true} \n          style={{\n            position: \"absolute\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            left: 0,\n            right: 0,\n            textAlign: \"center\",\n            zindex: 9,\n            width: 640,\n            height: 480,\n          }}\n        />\n        {console.log(tf)}\n        <canvas\n          ref={canvasRef}\n          style={{\n            position: \"absolute\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            left: 0,\n            right: 0,\n            textAlign: \"center\",\n            zindex: 8,\n            width: 640,\n            height: 480,\n          }}\n        />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}