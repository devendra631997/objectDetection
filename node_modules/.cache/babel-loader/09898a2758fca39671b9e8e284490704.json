{"ast":null,"code":"/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { NonMaxSuppressionV5 } from '@tensorflow/tfjs-core';\nimport { kernel_impls } from '@tensorflow/tfjs-core';\nvar nonMaxSuppressionV5Impl = kernel_impls.nonMaxSuppressionV5Impl;\nimport { assertNotComplex } from '../cpu_util';\nexport var nonMaxSuppressionV5Config = {\n  kernelName: NonMaxSuppressionV5,\n  backendName: 'cpu',\n  kernelFunc: function kernelFunc(_ref) {\n    var inputs = _ref.inputs,\n        backend = _ref.backend,\n        attrs = _ref.attrs;\n    var boxes = inputs.boxes,\n        scores = inputs.scores;\n    var maxOutputSize = attrs.maxOutputSize,\n        iouThreshold = attrs.iouThreshold,\n        scoreThreshold = attrs.scoreThreshold,\n        softNmsSigma = attrs.softNmsSigma;\n    var cpuBackend = backend;\n    assertNotComplex(boxes, 'NonMaxSuppressionWithScore');\n    var boxesVals = cpuBackend.data.get(boxes.dataId).values;\n    var scoresVals = cpuBackend.data.get(scores.dataId).values;\n    var maxOutputSizeVal = maxOutputSize;\n    var iouThresholdVal = iouThreshold;\n    var scoreThresholdVal = scoreThreshold;\n    var softNmsSigmaVal = softNmsSigma;\n\n    var _nonMaxSuppressionV5I = nonMaxSuppressionV5Impl(boxesVals, scoresVals, maxOutputSizeVal, iouThresholdVal, scoreThresholdVal, softNmsSigmaVal),\n        selectedIndices = _nonMaxSuppressionV5I.selectedIndices,\n        selectedScores = _nonMaxSuppressionV5I.selectedScores;\n\n    return [selectedIndices, selectedScores];\n  }\n};","map":{"version":3,"sources":["../../src/kernels/NonMaxSuppressionV5.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAQ,mBAAR,QAAuF,uBAAvF;AAEA,SAAQ,YAAR,QAA2B,uBAA3B;AACA,IAAM,uBAAuB,GAAG,YAAY,CAAC,uBAA7C;AAEA,SAAQ,gBAAR,QAA+B,aAA/B;AAEA,OAAO,IAAM,yBAAyB,GAAiB;AACrD,EAAA,UAAU,EAAE,mBADyC;AAErD,EAAA,WAAW,EAAE,KAFwC;AAGrD,EAAA,UAAU,EAAE,0BAA6B;AAAA,QAA3B,MAA2B,QAA3B,MAA2B;AAAA,QAAnB,OAAmB,QAAnB,OAAmB;AAAA,QAAV,KAAU,QAAV,KAAU;AAAA,QAChC,KADgC,GACf,MADe,CAChC,KADgC;AAAA,QACzB,MADyB,GACf,MADe,CACzB,MADyB;AAAA,QAEhC,aAFgC,GAGnC,KAHmC,CAEhC,aAFgC;AAAA,QAEjB,YAFiB,GAGnC,KAHmC,CAEjB,YAFiB;AAAA,QAEH,cAFG,GAGnC,KAHmC,CAEH,cAFG;AAAA,QAEa,YAFb,GAGnC,KAHmC,CAEa,YAFb;AAKvC,QAAM,UAAU,GAAG,OAAnB;AAEA,IAAA,gBAAgB,CAAC,KAAD,EAAQ,4BAAR,CAAhB;AAEA,QAAM,SAAS,GAAG,UAAU,CAAC,IAAX,CAAgB,GAAhB,CAAoB,KAAK,CAAC,MAA1B,EAAkC,MAApD;AACA,QAAM,UAAU,GAAG,UAAU,CAAC,IAAX,CAAgB,GAAhB,CAAoB,MAAM,CAAC,MAA3B,EAAmC,MAAtD;AAEA,QAAM,gBAAgB,GAAG,aAAzB;AACA,QAAM,eAAe,GAAG,YAAxB;AACA,QAAM,iBAAiB,GAAG,cAA1B;AACA,QAAM,eAAe,GAAG,YAAxB;;AAfuC,gCAiBG,uBAAuB,CAC7D,SAD6D,EAClD,UADkD,EACtC,gBADsC,EACpB,eADoB,EAE7D,iBAF6D,EAE1C,eAF0C,CAjB1B;AAAA,QAiBhC,eAjBgC,yBAiBhC,eAjBgC;AAAA,QAiBf,cAjBe,yBAiBf,cAjBe;;AAqBvC,WAAO,CAAC,eAAD,EAAkB,cAAlB,CAAP;AACD;AAzBoD,CAAhD","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { NonMaxSuppressionV5 } from '@tensorflow/tfjs-core';\nimport { kernel_impls } from '@tensorflow/tfjs-core';\nconst nonMaxSuppressionV5Impl = kernel_impls.nonMaxSuppressionV5Impl;\nimport { assertNotComplex } from '../cpu_util';\nexport const nonMaxSuppressionV5Config = {\n    kernelName: NonMaxSuppressionV5,\n    backendName: 'cpu',\n    kernelFunc: ({ inputs, backend, attrs }) => {\n        const { boxes, scores } = inputs;\n        const { maxOutputSize, iouThreshold, scoreThreshold, softNmsSigma } = attrs;\n        const cpuBackend = backend;\n        assertNotComplex(boxes, 'NonMaxSuppressionWithScore');\n        const boxesVals = cpuBackend.data.get(boxes.dataId).values;\n        const scoresVals = cpuBackend.data.get(scores.dataId).values;\n        const maxOutputSizeVal = maxOutputSize;\n        const iouThresholdVal = iouThreshold;\n        const scoreThresholdVal = scoreThreshold;\n        const softNmsSigmaVal = softNmsSigma;\n        const { selectedIndices, selectedScores } = nonMaxSuppressionV5Impl(boxesVals, scoresVals, maxOutputSizeVal, iouThresholdVal, scoreThresholdVal, softNmsSigmaVal);\n        return [selectedIndices, selectedScores];\n    }\n};\n//# sourceMappingURL=NonMaxSuppressionV5.js.map"]},"metadata":{},"sourceType":"module"}