{"ast":null,"code":"import _regeneratorRuntime from\"/home/kudos-it/Documents/pro/ar/object_detection/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/kudos-it/Documents/pro/ar/object_detection/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";// Import dependencies\nimport React,{useRef,useEffect}from\"react\";import*as tf from\"@tensorflow/tfjs\";import*as cocossd from\"@tensorflow-models/coco-ssd\";import Webcam from\"react-webcam\";import\"./App.css\";import{drawRect}from\"./utilities\";function App(){var webcamRef=useRef(null);var canvasRef=useRef(null);// Main function\nvar runCoco=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var net;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return cocossd.load();case 2:net=_context.sent;console.log(\"Handpose model loaded.\");//  Loop and detect hands\nsetInterval(function(){detect(net);},10);case 5:case\"end\":return _context.stop();}}},_callee);}));return function runCoco(){return _ref.apply(this,arguments);};}();var detect=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(net){var video,videoWidth,videoHeight,obj,ctx;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!(typeof webcamRef.current!==\"undefined\"&&webcamRef.current!==null&&webcamRef.current.video.readyState===4)){_context2.next=13;break;}// Get Video Properties\nvideo=webcamRef.current.video;videoWidth=webcamRef.current.video.videoWidth;videoHeight=webcamRef.current.video.videoHeight;// Set video width\nwebcamRef.current.video.width=videoWidth;webcamRef.current.video.height=videoHeight;// Set canvas height and width\ncanvasRef.current.width=videoWidth;canvasRef.current.height=videoHeight;// Make Detections\n_context2.next=10;return net.detect(video);case 10:obj=_context2.sent;// Draw mesh\nctx=canvasRef.current.getContext(\"2d\");drawRect(obj,ctx);case 13:case\"end\":return _context2.stop();}}},_callee2);}));return function detect(_x){return _ref2.apply(this,arguments);};}();useEffect(function(){return runCoco();});return/*#__PURE__*/React.createElement(\"div\",{className:\"App\"},/*#__PURE__*/React.createElement(\"header\",{className:\"App-header\"},/*#__PURE__*/React.createElement(Webcam,{ref:webcamRef,muted:true,style:{position:\"absolute\",marginLeft:\"auto\",marginRight:\"auto\",left:0,right:0,textAlign:\"center\",zindex:9,width:640,height:480}}),console.log(tf),/*#__PURE__*/React.createElement(\"canvas\",{ref:canvasRef,style:{position:\"absolute\",marginLeft:\"auto\",marginRight:\"auto\",left:0,right:0,textAlign:\"center\",zindex:8,width:640,height:480}})));}export default App;","map":{"version":3,"sources":["/home/kudos-it/Documents/pro/ar/object_detection/src/App.js"],"names":["React","useRef","useEffect","tf","cocossd","Webcam","drawRect","App","webcamRef","canvasRef","runCoco","load","net","console","log","setInterval","detect","current","video","readyState","videoWidth","videoHeight","width","height","obj","ctx","getContext","position","marginLeft","marginRight","left","right","textAlign","zindex"],"mappings":"2UAAA;AACA,MAAOA,CAAAA,KAAP,EAAgBC,MAAhB,CAAyBC,SAAzB,KAA0C,OAA1C,CACA,MAAO,GAAKC,CAAAA,EAAZ,KAAoB,kBAApB,CACA,MAAO,GAAKC,CAAAA,OAAZ,KAAyB,6BAAzB,CACA,MAAOC,CAAAA,MAAP,KAAmB,cAAnB,CACA,MAAO,WAAP,CACA,OAASC,QAAT,KAAyB,aAAzB,CAEA,QAASC,CAAAA,GAAT,EAAe,CACb,GAAMC,CAAAA,SAAS,CAAGP,MAAM,CAAC,IAAD,CAAxB,CACA,GAAMQ,CAAAA,SAAS,CAAGR,MAAM,CAAC,IAAD,CAAxB,CAEA;AACA,GAAMS,CAAAA,OAAO,0FAAG,iKACIN,CAAAA,OAAO,CAACO,IAAR,EADJ,QACRC,GADQ,eAEdC,OAAO,CAACC,GAAR,CAAY,wBAAZ,EACA;AACAC,WAAW,CAAC,UAAM,CAChBC,MAAM,CAACJ,GAAD,CAAN,CACD,CAFU,CAER,EAFQ,CAAX,CAJc,sDAAH,kBAAPF,CAAAA,OAAO,0CAAb,CASA,GAAMM,CAAAA,MAAM,2FAAG,kBAAOJ,GAAP,oKAGX,MAAOJ,CAAAA,SAAS,CAACS,OAAjB,GAA6B,WAA7B,EACAT,SAAS,CAACS,OAAV,GAAsB,IADtB,EAEAT,SAAS,CAACS,OAAV,CAAkBC,KAAlB,CAAwBC,UAAxB,GAAuC,CAL5B,4BAOX;AACMD,KARK,CAQGV,SAAS,CAACS,OAAV,CAAkBC,KARrB,CASLE,UATK,CASQZ,SAAS,CAACS,OAAV,CAAkBC,KAAlB,CAAwBE,UAThC,CAULC,WAVK,CAUSb,SAAS,CAACS,OAAV,CAAkBC,KAAlB,CAAwBG,WAVjC,CAYX;AACAb,SAAS,CAACS,OAAV,CAAkBC,KAAlB,CAAwBI,KAAxB,CAAgCF,UAAhC,CACAZ,SAAS,CAACS,OAAV,CAAkBC,KAAlB,CAAwBK,MAAxB,CAAiCF,WAAjC,CAEA;AACAZ,SAAS,CAACQ,OAAV,CAAkBK,KAAlB,CAA0BF,UAA1B,CACAX,SAAS,CAACQ,OAAV,CAAkBM,MAAlB,CAA2BF,WAA3B,CAEA;AApBW,wBAqBOT,CAAAA,GAAG,CAACI,MAAJ,CAAWE,KAAX,CArBP,SAqBLM,GArBK,gBAuBX;AACMC,GAxBK,CAwBChB,SAAS,CAACQ,OAAV,CAAkBS,UAAlB,CAA6B,IAA7B,CAxBD,CAyBXpB,QAAQ,CAACkB,GAAD,CAAMC,GAAN,CAAR,CAzBW,yDAAH,kBAANT,CAAAA,MAAM,6CAAZ,CA6BAd,SAAS,CAAC,iBAAIQ,CAAAA,OAAO,EAAX,EAAD,CAAT,CAEA,mBACE,2BAAK,SAAS,CAAC,KAAf,eACE,8BAAQ,SAAS,CAAC,YAAlB,eACE,oBAAC,MAAD,EACE,GAAG,CAAEF,SADP,CAEE,KAAK,CAAE,IAFT,CAGE,KAAK,CAAE,CACLmB,QAAQ,CAAE,UADL,CAELC,UAAU,CAAE,MAFP,CAGLC,WAAW,CAAE,MAHR,CAILC,IAAI,CAAE,CAJD,CAKLC,KAAK,CAAE,CALF,CAMLC,SAAS,CAAE,QANN,CAOLC,MAAM,CAAE,CAPH,CAQLX,KAAK,CAAE,GARF,CASLC,MAAM,CAAE,GATH,CAHT,EADF,CAgBGV,OAAO,CAACC,GAAR,CAAYX,EAAZ,CAhBH,cAiBE,8BACE,GAAG,CAAEM,SADP,CAEE,KAAK,CAAE,CACLkB,QAAQ,CAAE,UADL,CAELC,UAAU,CAAE,MAFP,CAGLC,WAAW,CAAE,MAHR,CAILC,IAAI,CAAE,CAJD,CAKLC,KAAK,CAAE,CALF,CAMLC,SAAS,CAAE,QANN,CAOLC,MAAM,CAAE,CAPH,CAQLX,KAAK,CAAE,GARF,CASLC,MAAM,CAAE,GATH,CAFT,EAjBF,CADF,CADF,CAoCD,CAED,cAAehB,CAAAA,GAAf","sourcesContent":["// Import dependencies\nimport React, { useRef,  useEffect } from \"react\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport * as cocossd from \"@tensorflow-models/coco-ssd\";\nimport Webcam from \"react-webcam\";\nimport \"./App.css\";\nimport { drawRect } from \"./utilities\";\n\nfunction App() {\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  // Main function\n  const runCoco = async () => {\n    const net = await cocossd.load();\n    console.log(\"Handpose model loaded.\");\n    //  Loop and detect hands\n    setInterval(() => {\n      detect(net);\n    }, 10);\n  };\n\n  const detect = async (net) => {\n    // Check data is available\n    if (\n      typeof webcamRef.current !== \"undefined\" &&\n      webcamRef.current !== null &&\n      webcamRef.current.video.readyState === 4\n    ) {\n      // Get Video Properties\n      const video = webcamRef.current.video;\n      const videoWidth = webcamRef.current.video.videoWidth;\n      const videoHeight = webcamRef.current.video.videoHeight;\n\n      // Set video width\n      webcamRef.current.video.width = videoWidth;\n      webcamRef.current.video.height = videoHeight;\n\n      // Set canvas height and width\n      canvasRef.current.width = videoWidth;\n      canvasRef.current.height = videoHeight;\n\n      // Make Detections\n      const obj = await net.detect(video);\n\n      // Draw mesh\n      const ctx = canvasRef.current.getContext(\"2d\");\n      drawRect(obj, ctx); \n    }\n  };\n\n  useEffect(()=>runCoco());\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Webcam\n          ref={webcamRef}\n          muted={true} \n          style={{\n            position: \"absolute\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            left: 0,\n            right: 0,\n            textAlign: \"center\",\n            zindex: 9,\n            width: 640,\n            height: 480,\n          }}\n        />\n        {console.log(tf)}\n        <canvas\n          ref={canvasRef}\n          style={{\n            position: \"absolute\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            left: 0,\n            right: 0,\n            textAlign: \"center\",\n            zindex: 8,\n            width: 640,\n            height: 480,\n          }}\n        />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}